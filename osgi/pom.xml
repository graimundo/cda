<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>cda-plugin</artifactId>
    <groupId>pentaho</groupId>
    <version>9.0.0.0-SNAPSHOT</version>
  </parent>

  <groupId>org.pentaho.ctools</groupId>
  <artifactId>cda-osgi-impl</artifactId>
  <packaging>bundle</packaging>

  <dependencies>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>cda-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>cda-pentaho</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pdi-dataservice-client-plugin</artifactId>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>cpf-core</artifactId>
    </dependency>

    <!-- Used in Blueprint -->
    <dependency>
      <groupId>org.pentaho.reporting.library</groupId>
      <artifactId>libformula</artifactId>
    </dependency>


  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <!-- We need to explicitly include these imports because reporting dynamically loads
            ResourceFactory(s) in the ResourceManager. Since CDA is running within OSGi when it instantiates
            a new ResourceManager the dynamic loading fails because the resource factory classes are not
            found. -->
            <!-- <DynamicImport-Package>org.pentaho.reporting.libraries.*,org.pentaho.reporting.engine.*</DynamicImport-Package>
            -->
            <Import-Package>org.pentaho.reporting.libraries.xmlns.parser,*</Import-Package>
          </instructions>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>